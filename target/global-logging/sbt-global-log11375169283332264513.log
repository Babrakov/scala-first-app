[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Sergei\AppData\Local\Temp\idea9.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Sergei\AppData\Local\Temp\idea9.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.6 (Oracle Corporation Java 11.0.12)
[debug]       Load.loadUnit: plugins took 121.3107ms
[debug]       Load.loadUnit: defsScala took 0.4272ms
[debug] [Loading] Scanning directory C:\Users\Sergei\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Sergei\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.293 ms
[debug]           Load.resolveProject(global-plugins) took 59.408ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Sergei\.sbt\1.0\plugins, plugins: List(<none>))) took 121.951ms
[debug] [Loading] Done in C:\Users\Sergei\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 158.0449ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2659ms
[debug]     Load.loadUnit(file:/C:/Users/Sergei/.sbt/1.0/plugins/, ...) took 292.9899ms
[debug]   Load.apply: load took 506.228ms
[debug]   Load.apply: resolveProjects took 8.8602ms
[debug]   Load.apply: finalTransforms took 68.9929ms
[debug]   Load.apply: config.delegates took 8.9171ms
[debug]   Load.apply: Def.make(settings)... took 489.3572ms
[debug]   Load.apply: structureIndex took 118.2003ms
[debug]   Load.apply: mkStreams took 2.7893ms
[info] loading global plugins from C:\Users\Sergei\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2653.2959ms
[debug]           Load.loadUnit: plugins took 26.2952ms
[debug]           Load.loadUnit: defsScala took 0.0064ms
[debug] [Loading] Scanning directory C:\Users\Sergei\Documents\IdeaProjects\scala-first-project\project
[debug]             Load.loadUnit: mkEval took 8.3627ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Sergei\Documents\IdeaProjects\scala-first-project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7762 ms
[info] loading settings for project scala-first-project-build from dependencies.sbt,plugins.sbt,idea9.sbt ...
[debug]               Load.resolveProject(scala-first-project-build) took 3.8443ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-first-project-build, base: C:\Users\Sergei\Documents\IdeaProjects\scala-first-project\project, plugins: List(<none>))) took 6.3146ms
[debug] [Loading] Done in C:\Users\Sergei\Documents\IdeaProjects\scala-first-project\project, returning: (scala-first-project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2778.1533ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.3712ms
[debug]         Load.loadUnit(file:/C:/Users/Sergei/Documents/IdeaProjects/scala-first-project/project/, ...) took 2811.1862ms
[debug]       Load.apply: load took 2812.664ms
[debug]       Load.apply: resolveProjects took 0.123ms
[debug]       Load.apply: finalTransforms took 9.9485ms
[debug]       Load.apply: config.delegates took 0.367ms
[debug]       Load.apply: Def.make(settings)... took 96.5715ms
[debug]       Load.apply: structureIndex took 28.9655ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from C:\Users\Sergei\Documents\IdeaProjects\scala-first-project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4820.8022ms
[debug]     Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\Users\Sergei\Documents\IdeaProjects\scala-first-project
[debug]       Load.loadUnit: mkEval took 0.2216ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Sergei\Documents\IdeaProjects\scala-first-project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.DependencyTreePlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.DependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.DependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2365 ms
[info] loading settings for project scala-first-project from build.sbt ...
[debug]         Load.resolveProject(scala-first-project) took 82.2712ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala-first-project, base: C:\Users\Sergei\Documents\IdeaProjects\scala-first-project, plugins: List(<none>))) took 86.2992ms
[debug] [Loading] Done in C:\Users\Sergei\Documents\IdeaProjects\scala-first-project, returning: (scala-first-project)
[debug]     Load.loadUnit: loadedProjectsRaw took 1722.1162ms
[debug]     Load.loadUnit: cleanEvalClasses took 14.4804ms
[debug]   Load.loadUnit(file:/C:/Users/Sergei/Documents/IdeaProjects/scala-first-project/, ...) took 6558.1387ms
[debug] Load.apply: load took 6560.5438ms
[debug] Load.apply: resolveProjects took 0.3207ms
[debug] Load.apply: finalTransforms took 33.8199ms
[debug] Load.apply: config.delegates took 0.2803ms
[debug] Load.apply: Def.make(settings)... took 104.0493ms
[debug] Load.apply: structureIndex took 31.203ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to hello-world (in build file:/C:/Users/Sergei/Documents/IdeaProjects/scala-first-project/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62241 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62241, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to hello-world (in build file:/C:/Users/Sergei/Documents/IdeaProjects/scala-first-project/)
[debug] > Exec(idea-shell, None, None)
