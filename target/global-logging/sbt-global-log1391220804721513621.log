[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Sergei\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Sergei\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.6 (Oracle Corporation Java 11.0.12)
[debug]       Load.loadUnit: plugins took 108.4767ms
[debug]       Load.loadUnit: defsScala took 0.3016ms
[debug] [Loading] Scanning directory C:\Users\Sergei\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Sergei\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.1025 ms
[debug]           Load.resolveProject(global-plugins) took 48.2942ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Sergei\.sbt\1.0\plugins, plugins: List(<none>))) took 93.7244ms
[debug] [Loading] Done in C:\Users\Sergei\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 123.9085ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2597ms
[debug]     Load.loadUnit(file:/C:/Users/Sergei/.sbt/1.0/plugins/, ...) took 244.6649ms
[debug]   Load.apply: load took 443.4775ms
[debug]   Load.apply: resolveProjects took 10.8658ms
[debug]   Load.apply: finalTransforms took 73.6712ms
[debug]   Load.apply: config.delegates took 10.494ms
[debug]   Load.apply: Def.make(settings)... took 542.1113ms
[debug]   Load.apply: structureIndex took 141.1145ms
[debug]   Load.apply: mkStreams took 2.0191ms
[info] loading global plugins from C:\Users\Sergei\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2829.462ms
[debug]           Load.loadUnit: plugins took 38.6626ms
[debug]           Load.loadUnit: defsScala took 0.0102ms
[debug] [Loading] Scanning directory C:\Users\Sergei\Documents\IdeaProjects\scala-first-project\project
[debug]             Load.loadUnit: mkEval took 10.1034ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Sergei\Documents\IdeaProjects\scala-first-project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.0956 ms
[info] loading settings for project scala-first-project-build from dependencies.sbt,idea2.sbt ...
[debug]               Load.resolveProject(scala-first-project-build) took 4.7326ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-first-project-build, base: C:\Users\Sergei\Documents\IdeaProjects\scala-first-project\project, plugins: List(<none>))) took 7.5447ms
[debug] [Loading] Done in C:\Users\Sergei\Documents\IdeaProjects\scala-first-project\project, returning: (scala-first-project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2926.8223ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.499ms
[debug]         Load.loadUnit(file:/C:/Users/Sergei/Documents/IdeaProjects/scala-first-project/project/, ...) took 2972.3642ms
[debug]       Load.apply: load took 2974.1316ms
[debug]       Load.apply: resolveProjects took 0.3589ms
[debug]       Load.apply: finalTransforms took 12.4005ms
[debug]       Load.apply: config.delegates took 0.4516ms
[debug]       Load.apply: Def.make(settings)... took 113.8459ms
[debug]       Load.apply: structureIndex took 35.5764ms
[debug]       Load.apply: mkStreams took 0.004ms
[info] loading project definition from C:\Users\Sergei\Documents\IdeaProjects\scala-first-project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 8013.9876ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\Sergei\Documents\IdeaProjects\scala-first-project
[debug]       Load.loadUnit: mkEval took 0.5956ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Sergei\Documents\IdeaProjects\scala-first-project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.2247 ms
[info] loading settings for project scala-first-project from build.sbt ...
[debug]         Load.resolveProject(scala-first-project) took 36.0038ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala-first-project, base: C:\Users\Sergei\Documents\IdeaProjects\scala-first-project, plugins: List(<none>))) took 41.415ms
[debug] [Loading] Done in C:\Users\Sergei\Documents\IdeaProjects\scala-first-project, returning: (scala-first-project)
[debug]     Load.loadUnit: loadedProjectsRaw took 3432.9107ms
[debug]     Load.loadUnit: cleanEvalClasses took 16.1411ms
[debug]   Load.loadUnit(file:/C:/Users/Sergei/Documents/IdeaProjects/scala-first-project/, ...) took 11463.8541ms
[debug] Load.apply: load took 11466.818ms
[debug] Load.apply: resolveProjects took 0.1466ms
[debug] Load.apply: finalTransforms took 34.1767ms
[debug] Load.apply: config.delegates took 0.2872ms
[debug] Load.apply: Def.make(settings)... took 109.1662ms
[debug] Load.apply: structureIndex took 22.635ms
[debug] Load.apply: mkStreams took 0.0038ms
[info] set current project to hello-world (in build file:/C:/Users/Sergei/Documents/IdeaProjects/scala-first-project/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62241 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62241, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to hello-world (in build file:/C:/Users/Sergei/Documents/IdeaProjects/scala-first-project/)
[debug] > Exec(idea-shell, None, None)
